pipeline {
    //agent {
    //   docker {
    //        image 'maven:3-alpine' 
    //        args '-v /root/.m2:/root/.m2' 
    //    }
    //}
    options {
        skipDefaultCheckout true
        timeout(time: 30, unit: 'MINUTES')
        // disableConcurrentBuilds()
        timestamps()
        buildDiscarder(logRotator(daysToKeepStr: '14', numToKeepStr: '20'))
        ansiColor colorMapName: 'XTerm'
    }
    agent any
    stages {
        stage('Checkout code') {
            steps {
                echo 'Entering stage \u27A1 code checkout'
                    }
                retry(3) {
                    cleanWs()
                    checkout(
                            [$class: 'GitSCM',
                             branches: [[name: "master"]],
                             doGenerateSubmoduleConfigurations: false,
                             extensions: [],
                             submoduleCfg: [],
                             userRemoteConfigs: [[credentialsId: 'ССС', url: 'ЧЧЧ']]
                            ]
                    )
                }
                script { currentBuild.displayName = "#" + currentBuild.number + "_${VERSION}" + "_${ENV}" }
            }
        }
        stage('Build') { 
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Rename artifact'){
            steps {
                //sh "NEWNAME=`date +'%Y_%m_%d_%H_%M_%S_%N'`_`git rev-parse --short HEAD`.jar"
                sh "mv target/java-archive-1.0-SNAPSHOT.jar target/`date +'%Y_%m_%d_%H_%M_%S_%N'`_`git rev-parse --short HEAD`.jar"
                sh 'ls -lah target'
            }
        }
        stage('Upload'){
            steps {
                sh 'aws s3 cp target/`ls target | grep jar` s3://jenkins-test2019829123/'
            }
        }
    }
}
